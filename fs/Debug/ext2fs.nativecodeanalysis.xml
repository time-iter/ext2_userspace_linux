<?xml version="1.0" encoding="UTF-8"?>
<DEFECTS>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>94</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'DirItem::inode_addr' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>DirItem::{ctor}</FUNCTION>
    <DECORATED>??0DirItem@@QAE@XZ</DECORATED>
    <FUNCLINE>94</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>109</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'BlockGroupInfo::freeblock_remain' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>BlockGroupInfo::{ctor}</FUNCTION>
    <DECORATED>??0BlockGroupInfo@@QAE@XZ</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>109</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'BlockGroupInfo::freeblock' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>BlockGroupInfo::{ctor}</FUNCTION>
    <DECORATED>??0BlockGroupInfo@@QAE@XZ</DECORATED>
    <FUNCLINE>109</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'UserInfo::uid' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>UserInfo::{ctor}</FUNCTION>
    <DECORATED>??0UserInfo@@QAE@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>104</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'UserInfo::currentInode' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>UserInfo::{ctor}</FUNCTION>
    <DECORATED>??0UserInfo@@QAE@XZ</DECORATED>
    <FUNCLINE>104</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_ino' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_indirect3_block' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_indirect2_block' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_indirect_block' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_direct_block' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_atime' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_mtime' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_ctime' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_size' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_gid' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_uid' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_mode' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.h</FILENAME>
      <LINE>89</LINE>
      <COLUMN>0</COLUMN>
    </SFA>
    <DEFECTCODE>26495</DEFECTCODE>
    <DESCRIPTION>Variable 'Inode::i_cnt' is uninitialized. Always initialize a member variable (type.6).</DESCRIPTION>
    <FUNCTION>Inode::{ctor}</FUNCTION>
    <DECORATED>??0Inode@@QAE@XZ</DECORATED>
    <FUNCLINE>89</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>36</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>写入到“inode_bitmap”时缓冲区溢出: 可写大小为“1024”个字节，但可能写入了“10485760”个字节。</DESCRIPTION>
    <FUNCTION>ialloc</FUNCTION>
    <DECORATED>?ialloc@@YAHXZ</DECORATED>
    <FUNCLINE>20</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>27</LINE>
        <COLUMN>29</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“sblock.s_free_inode_num==0”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>35</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“inode_bitmap”是“fread”中的输出(在 c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h:234 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>36</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>写入到“inode_bitmap[10485759]”无效(可写范围是 0 到 1023)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>165</LINE>
      <COLUMN>4</COLUMN>
    </SFA>
    <DEFECTCODE>6292</DEFECTCODE>
    <DESCRIPTION>for 循环定义错误: 从最大值开始向上计数。</DESCRIPTION>
    <FUNCTION>ifree</FUNCTION>
    <DECORATED>?ifree@@YA_NH@Z</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>34</COLUMN>
    </SFA>
    <DEFECTCODE>6200</DEFECTCODE>
    <DESCRIPTION>索引“2147483647”超出了“0”至“11”的有效范围(对于非堆栈缓冲区“struct Inode inode.i_direct_block”)。</DESCRIPTION>
    <FUNCTION>ifree</FUNCTION>
    <DECORATED>?ifree@@YA_NH@Z</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>84</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>写入到“block_bitmap”时缓冲区溢出: 可写大小为“1024”个字节，但可能写入了“10485760”个字节。</DESCRIPTION>
    <FUNCTION>ifree</FUNCTION>
    <DECORATED>?ifree@@YA_NH@Z</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>75</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>80</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“block_bitmap”是“fread”中的输出(在 c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h:234 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>写入到“block_bitmap[10485759]”无效(可写范围是 0 到 1023)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>76</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>写入到“inode_bitmap”时缓冲区溢出: 可写大小为“1024”个字节，但可能写入了“10485760”个字节。</DESCRIPTION>
    <FUNCTION>ifree</FUNCTION>
    <DECORATED>?ifree@@YA_NH@Z</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>75</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“inode_bitmap”是“fread”中的输出(在 c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h:234 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>写入到“inode_bitmap[10485759]”无效(可写范围是 0 到 1023)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>168</LINE>
      <COLUMN>10</COLUMN>
    </SFA>
    <DEFECTCODE>6385</DEFECTCODE>
    <DESCRIPTION>从“inode.i_direct_block”中读取的数据无效: 可读大小为“48”个字节，但可能读取了“52”个字节。</DESCRIPTION>
    <FUNCTION>ifree</FUNCTION>
    <DECORATED>?ifree@@YA_NH@Z</DECORATED>
    <FUNCLINE>66</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>75</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>76</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>79</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>80</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>83</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>84</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>87</LINE>
        <COLUMN>14</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>88</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>89</LINE>
        <COLUMN>5</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>90</LINE>
        <COLUMN>29</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此分支(假定“inode_bitmap[inode_num]==1”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>93</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>97</LINE>
        <COLUMN>7</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>98</LINE>
        <COLUMN>7</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“inode”是“fread”中的输出(在 c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h:234 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>101</LINE>
        <COLUMN>3</COLUMN>
        <KEYEVENT>
          <ID>3</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此分支(假定“&lt;分支条件&gt;”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>103</LINE>
        <COLUMN>27</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>104</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>108</LINE>
        <COLUMN>20</COLUMN>
        <KEYEVENT>
          <ID>4</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“inode.i_size&lt;=12*1024”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>135</LINE>
        <COLUMN>25</COLUMN>
        <KEYEVENT>
          <ID>5</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此分支(假定“&lt;分支条件&gt;”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>138</LINE>
        <COLUMN>17</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>139</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>140</LINE>
        <COLUMN>9</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>37</COLUMN>
        <KEYEVENT>
          <ID>6</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&gt;=0”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>143</LINE>
        <COLUMN>40</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>44</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>37</COLUMN>
        <KEYEVENT>
          <ID>7</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&gt;=0”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>143</LINE>
        <COLUMN>40</COLUMN>
        <KEYEVENT>
          <ID>8</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>跳过此分支(假定“&lt;分支条件&gt;”为 false)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>44</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>141</LINE>
        <COLUMN>37</COLUMN>
        <KEYEVENT>
          <ID>9</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>继续此循环(假定“i&gt;=0”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>37</COLUMN>
        <KEYEVENT>
          <ID>10</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>进入此循环(假定“i&gt;=0”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>168</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>169</LINE>
        <COLUMN>18</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>170</LINE>
        <COLUMN>31</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>171</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>172</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>173</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>176</LINE>
        <COLUMN>28</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>179</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>180</LINE>
        <COLUMN>10</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>181</LINE>
        <COLUMN>37</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>182</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>183</LINE>
        <COLUMN>11</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>45</COLUMN>
        <KEYEVENT>
          <ID>11</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>“i”可能等于 12</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>165</LINE>
        <COLUMN>37</COLUMN>
        <KEYEVENT>
          <ID>12</ID>
          <KIND>分支</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>继续此循环(假定“i&gt;=0”)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>168</LINE>
        <COLUMN>10</COLUMN>
        <KEYEVENT>
          <ID>13</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>从“inode.i_direct_block[12]”中读取无效(可读范围是 0 到 11)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>245</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>写入到“inode_bitmap”时缓冲区溢出: 可写大小为“1024”个字节，但可能写入了“10485760”个字节。</DESCRIPTION>
    <FUNCTION>balloc</FUNCTION>
    <DECORATED>?balloc@@YAHXZ</DECORATED>
    <FUNCLINE>235</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>244</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>245</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“inode_bitmap”是“fread”中的输出(在 c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h:234 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>245</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>写入到“inode_bitmap[10485759]”无效(可写范围是 0 到 1023)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>253</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6386</DEFECTCODE>
    <DESCRIPTION>写入到“block_bitmap”时缓冲区溢出: 可写大小为“1024”个字节，但可能写入了“10485760”个字节。</DESCRIPTION>
    <FUNCTION>balloc</FUNCTION>
    <DECORATED>?balloc@@YAHXZ</DECORATED>
    <FUNCLINE>235</FUNCLINE>
    <PROBABILITY>1</PROBABILITY>
    <RANK>4</RANK>
    <CATEGORY>
      <RULECATEGORY>mspft</RULECATEGORY>
    </CATEGORY>
    <PATH>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>244</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>245</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>248</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>249</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>252</LINE>
        <COLUMN>6</COLUMN>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>253</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>1</ID>
          <KIND>声明</KIND>
          <IMPORTANCE>Full</IMPORTANCE>
          <MESSAGE>“block_bitmap”是“fread”中的输出(在 c:\program files (x86)\windows kits\10\include\10.0.17134.0\ucrt\stdio.h:234 处声明)</MESSAGE>
        </KEYEVENT>
      </SFA>
      <SFA>
        <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
        <FILENAME>ext2fs.cpp</FILENAME>
        <LINE>253</LINE>
        <COLUMN>6</COLUMN>
        <KEYEVENT>
          <ID>2</ID>
          <KIND>使用情况</KIND>
          <IMPORTANCE>Essential</IMPORTANCE>
          <MESSAGE>写入到“block_bitmap[10485759]”无效(可写范围是 0 到 1023)</MESSAGE>
        </KEYEVENT>
      </SFA>
    </PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>1337</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “sscanf”。</DESCRIPTION>
    <FUNCTION>check</FUNCTION>
    <DECORATED>?check@@YA_NPBD0@Z</DECORATED>
    <FUNCLINE>1227</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>1338</LINE>
      <COLUMN>12</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “sscanf”。</DESCRIPTION>
    <FUNCTION>check</FUNCTION>
    <DECORATED>?check@@YA_NPBD0@Z</DECORATED>
    <FUNCLINE>1227</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>1398</LINE>
      <COLUMN>6</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “scanf”。</DESCRIPTION>
    <FUNCTION>login</FUNCTION>
    <DECORATED>?login@@YA_NXZ</DECORATED>
    <FUNCLINE>1389</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>1443</LINE>
      <COLUMN>7</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “sscanf”。</DESCRIPTION>
    <FUNCTION>do_command</FUNCTION>
    <DECORATED>?do_command@@YAXPBD@Z</DECORATED>
    <FUNCLINE>1437</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
  <DEFECT>
    <SFA>
      <FILEPATH>c:\users\lsc\source\repos\fs\fs\</FILEPATH>
      <FILENAME>ext2fs.cpp</FILENAME>
      <LINE>1450</LINE>
      <COLUMN>8</COLUMN>
    </SFA>
    <DEFECTCODE>6031</DEFECTCODE>
    <DESCRIPTION>返回值被忽略: “sscanf”。</DESCRIPTION>
    <FUNCTION>do_command</FUNCTION>
    <DECORATED>?do_command@@YAXPBD@Z</DECORATED>
    <FUNCLINE>1437</FUNCLINE>
    <PATH></PATH>
  </DEFECT>
</DEFECTS>